package com.prims;
import java.util.*;

 class PrimsAlogrithm {
    
    
    public int minEdge(int key[], boolean mst[], int V) {
        int min = Integer.MAX_VALUE;
        int minEdge = -1;
        for (int i = 0; i < V; i++) {
            if (!mst[i] && key[i] < min) {
                min = key[i];
                minEdge = i;
            }
        }
        return minEdge;
    }

    
    void printMST(int parent[], int graph[][], int V,int minCost) {
        System.out.println("Edge \tWeight");
        for (int i = 1; i < V; i++) {
            System.out.println(parent[i] + " - " + i + "\t" + graph[i][parent[i]]);
    }
        System.out.println("Minimum cost = " + minCost);
    }

    
    public void primsMST(int graph[][], int V) {
        int[] parent = new int[V]; 
        int[] key = new int[V];    
        boolean[] mst = new boolean[V];
        int minCost = 0;           

        for (int i = 0; i < V; i++) {
            key[i] = Integer.MAX_VALUE;
            mst[i] = false;
        }

        key[0] = 0;
        parent[0] = -1; 

        for (int edges = 0; edges < V - 1; edges++) {
            int u = minEdge(key, mst, V);
            mst[u] = true;

            for (int v = 0; v < V; v++) {
                if (graph[u][v] != 0 && !mst[v] && graph[u][v] < key[v]) {
                    parent[v] = u;
                    key[v] = graph[u][v];
                }
            }
        }

        for (int i = 1; i < V; i++) {
            minCost += graph[i][parent[i]];
        }
        printMST(parent, graph, V, minCost);
    }
}



public class Prims {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		PrimsAlogrithm p = new PrimsAlogrithm();
		
		int v;
		System.out.println("Enter the number of vertices of graph");
		v = sc.nextInt();
		
		int adj[][] = new int[v][v];
		
		System.out.println("Enter the weights in adjacency matrix of graph");
		
		for (int i = 0; i < v; i++) {
            for (int j = 0; j < v; j++) {
                if (i == j) {
                    adj[i][j] = 0; 
                } else {
                    System.out.printf("Enter the weight of edge from vertex %d to vertex %d: ", i, j);
                    adj[i][j] = sc.nextInt();
                }
            }
        }
		
		System.out.println("Adjacency Matrix of Graph is :");
		
		for(int i=0;i<v;i++) {
			for(int j=0;j<v;j++) {
				System.out.print(adj[i][j] + "\t");
			}
			System.out.println("\n");
		}
		
		p.primsMST(adj, v);

	}

}
