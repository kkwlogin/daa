package com.binarysearch;
import java.util.Scanner;
 

  
public class Binarysearch {
   public static int Recursive(int arr[],int low,int high,int key){
        int left=low;
        int right=high;
        int mid= left+ (right-left)/2;
        if(left<right){
        if(key==arr[mid]){
        System.out.println("The element found at"+(mid+1)+"index");
        return 0;
        }
        else if(key>arr[mid]){
            left=mid+1;
            Recursive(arr,left,right,key);
                }
        else if(key>arr[mid]){
        right=mid-1;
        Recursive(arr,left,right,key);}
        }
        else {
        System.out.println("Number Not found");}
        return 1;
        
    }
  public static int NonRecursive(int arr[], int low, int high, int key) {
    int left = low;
    int right = high;

    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (key == arr[mid]) {
            System.out.println("The element is found at index " + (mid + 1));
            return 0;
        } else if (key < arr[mid]) {
            right = mid - 1;
        } else {
            left = mid + 1;
        }
    }

    System.out.println("Element was not found in the array");
    return 1;
}

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the size of the array");
        int n=sc.nextInt();
        int arr[]=new int[n];

                System.out.println("Enter the array");
                for(int i=0; i<n ; i++){
                    arr[i] =sc.nextInt();
                }

        System.out.println("Enter the number to find");
        int k=sc.nextInt();
        System.out.println("Menu");
        System.out.println("1.Recursive");
        System.out.println("2.Non-Recursive");
        int ch=sc.nextInt();
        switch(ch){
            case 1: Recursive(arr,0,n-1,k);
        break;
            case 2:NonRecursive(arr,0,n-1,k);
        break;
            default:System.out.println("Invalid Option");
        break;
        }

        
    }
}
